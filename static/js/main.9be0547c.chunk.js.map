{"version":3,"sources":["assets/UnknownRoute.svg","pages/Home.jsx","utils/constants/routerConstants.js","redux/actions/index.js","utils/constants/actionConstants.js","components/ProjectCard.jsx","pages/Projects.jsx","pages/UnknownRoute.jsx","redux/reducers/projectsReducer.js","redux/reducers/loadingReducer.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.js","App.jsx"],"names":["module","exports","Home","useEffect","analytics","logEvent","value","className","Container","Row","Col","xs","Image","style","width","height","src","roundedCircle","lineHeight","fontSize","color","size","icon","faEnvelope","href","target","rel","faLinkedin","faGithub","faTwitter","Button","variant","to","loadingAction","showLoading","type","ProjectCard","props","data","title","description","updatedOn","tags","link","image","Card","bg","Img","Body","faExternalLinkSquareAlt","map","tag","index","key","Badge","Projects","projects","useSelector","state","loading","dispatch","useDispatch","database","ref","once","then","val","catch","error","console","log","Alert","show","Spinner","animation","role","project","sm","md","lg","UnknownRoute","UnknownRouteLogo","initialState","reducer","combineReducers","action","createStore","applyMiddleware","thunk","Boolean","window","location","hostname","match","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","store","basename","process","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9be0547c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/UnknownRoute.a249e489.svg\";","import React, { useEffect } from 'react'\r\nimport { analytics } from \"firebase\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport * as paths from \"../utils/constants/routerConstants\"\r\n\r\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { faTwitter, faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons'\r\n\r\nexport const Home = () => {\r\n\r\n  useEffect(() => {\r\n    analytics().logEvent(\"new_user\", { value: true })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container h-100 d-flex justify-content-center\">\r\n      <div className=\"my-auto\">\r\n        <Container>\r\n          <Row className=\"align-items-center justify-content-between\">\r\n            <Col xs=\"auto\">\r\n              <Image style={{ width: \"150px\", height: \"150px\" }} src=\"https://firebasestorage.googleapis.com/v0/b/studious-hydra-133711.appspot.com/o/profile%20picture%2F20200102_154614.jpg?alt=media&token=0e6d2278-3693-47d0-ae98-f7ab2c48e62d\" roundedCircle></Image>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <h1 className=\"display-4\">Hey, I'm Jama</h1>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"my-5\">\r\n            <Col xs=\"12\">\r\n              <h6 style={{ lineHeight: \"30px\" }}>I focus on writing <span style={{ fontSize: \"25px\", color: \"yellow\" }}>clean and efficient code</span> with a passion for designing <span style={{ fontSize: \"25px\", color: \"yellow\" }}> beautiful and functional user experience</span></h6>\r\n            </Col>\r\n            <Col className=\"mt-3\" xs=\"auto\">\r\n              <FontAwesomeIcon color=\"white\" size=\"lg\" icon={faEnvelope} />\r\n            </Col>\r\n            <Col className=\"mt-3\">\r\n              <h6>jama3137@gmail.com</h6>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mb-5\">\r\n            <Col xs=\"auto\"><a href=\"https://www.linkedin.com/in/jama-mohamed/\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon color=\"white\" size=\"3x\" icon={faLinkedin} /></a></Col>\r\n            <Col xs=\"auto\"><a href=\"https://github.com/jama5262\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon color=\"white\" size=\"3x\" icon={faGithub} /></a></Col>\r\n            <Col xs=\"auto\"><a href=\"https://twitter.com/timedjama5262\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon color=\"white\" size=\"3x\" icon={faTwitter} /></a></Col>\r\n          </Row>\r\n          <Row className=\"align-items-center justify-content-center\">\r\n            <Col xs=\"auto\">\r\n              <a href=\"https://firebasestorage.googleapis.com/v0/b/studious-hydra-133711.appspot.com/o/resume%2FResume.pdf?alt=media&token=d89c72c9-ee55-4846-963a-3f00b41c19d1\" target=\"_blank\" rel=\"noopener noreferrer\"><Button variant=\"primary\">View Resume</Button></a>\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Link to={paths.PROJECTS}><Button className=\"animateProjectButton\" variant=\"primary\">View Projects</Button></Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const HOME = '/';\r\nexport const PROJECTS = '/projects';","import { database } from \"firebase\";\r\n\r\nimport * as types from \"../../utils/constants/actionConstants\"\r\n\r\nexport const addProjects = projects => ({type: types.PROJECTS, projects})\r\nexport const loadingAction = showLoading => ({ type: types.LOADING, showLoading })\r\nexport const getProjects = () => {\r\n  return (dispatch) => {\r\n    dispatch(loadingAction(true))\r\n    database().ref('projects').once('value')\r\n    .then((data) => {\r\n      dispatch(addProjects(data.val()))\r\n      dispatch(loadingAction(false))\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(loadingAction(false))\r\n    })\r\n  }\r\n}","export const PROJECTS = 'PROJECTS';\r\nexport const LOADING = 'LOADING';","import React from 'react'\r\n\r\nimport { Row, Col, Card, Badge } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExternalLinkSquareAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const ProjectCard = (props) => {\r\n\r\n  const { title, description, updatedOn, tags, link, image } = props.data\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"mb-3\" bg=\"dark\">\r\n        <Card.Img variant=\"top\" src={image} />\r\n        <Card.Body>\r\n          <a href={ link } target=\"_blank\" rel=\"noopener noreferrer\"><h4>{title} <FontAwesomeIcon color=\"yellow\" icon={faExternalLinkSquareAlt} /></h4></a>\r\n          <h6 className=\"my-3\" style={{lineHeight: \"30px\"}}>\r\n            {description}\r\n          </h6>\r\n          <h6 className=\"mb-3\" style={{ fontSize: \"10px\" }}>Updated on {updatedOn}</h6>\r\n          <Row>\r\n            {\r\n              tags.map((tag, index) => {\r\n                return <Col key={index} xs=\"auto\"><h6><Badge variant=\"primary\">{tag}</Badge></h6></Col>\r\n              })\r\n            }\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { analytics } from \"firebase\";\r\n\r\nimport { getProjects } from \"../redux/actions\";\r\n\r\nimport { Container, Row, Col, Alert, Spinner } from \"react-bootstrap\";\r\n\r\nimport { ProjectCard } from \"../components/ProjectCard\";\r\n\r\nexport const Projects = () => {\r\n\r\n  const projects = useSelector(state => state.projects.projects)\r\n  const loading = useSelector(state => state.loading.showLoading)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getProjects())\r\n    analytics().logEvent(\"view_projects\", {value: true})\r\n  }, [])\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col className=\"my-5\" xs=\"12\"><h1>Projects</h1></Col>\r\n        <Col>\r\n          <Alert show={loading} variant=\"warning\">\r\n            <Spinner animation=\"border\" role=\"status\"></Spinner> Loading Projects\r\n          </Alert>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-5\">\r\n        {\r\n          projects.map((project, index) => {\r\n            return <Col key={index} xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\"><ProjectCard data={project} /></Col>\r\n          })\r\n        }\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport UnknownRouteLogo from \"../assets/UnknownRoute.svg\"\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\n\r\nexport const UnknownRoute = () => {\r\n  return (\r\n    <div className=\"container h-100 d-flex justify-content-center\">\r\n      <div className=\"my-auto\">\r\n        <Container>\r\n          <Row>\r\n            <Col className=\"align-self-center\"><h1>Oops!, I think you're lost. <br/><br/> <span style={{ fontSize: \"70px\", color: \"yellow\" }}>404</span></h1></Col>\r\n            <Col className=\"align-self-center\" xs=\"auto\"><Image style={{ width: \"400px\", height: \"400px\" }} src={UnknownRouteLogo}></Image></Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","  \r\nimport * as types from \"../../utils/constants/actionConstants\"\r\n\r\nconst initialState = {\r\n  projects: []\r\n}\r\n\r\nexport const projects = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.PROJECTS:\r\n      state = { ...state, projects: action.projects }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return state\r\n}","import * as types from \"../../utils/constants/actionConstants\"\r\n\r\nconst initialState = {\r\n  showLoading: false\r\n}\r\n\r\nexport const loading = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.LOADING:\r\n      state = { ...state, showLoading: action.showLoading }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return state\r\n}","import { combineReducers } from \"redux\";\r\n\r\nimport { projects } from \"./projectsReducer\"\r\nimport { loading } from \"./loadingReducer\"\r\n\r\nexport const reducer = combineReducers({\r\n  projects,\r\n  loading\r\n});","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { reducer } from \"./reducers\";\r\n\r\nexport default createStore(reducer, applyMiddleware(thunk));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { analytics } from \"firebase\";\nimport app from \"firebase/\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./style/style.css\"\nimport { App } from \"./App\";\nimport store from \"./redux/store\"\nimport * as serviceWorker from './serviceWorker';\n\nconst config = {\n  apiKey: \"AIzaSyCK__CJKpoKvTXAxBXX--Awgr-wPbkTiS4\",\n  authDomain: \"studious-hydra-133711.firebaseapp.com\",\n  databaseURL: \"https://studious-hydra-133711.firebaseio.com\",\n  projectId: \"studious-hydra-133711\",\n  storageBucket: \"studious-hydra-133711.appspot.com\",\n  messagingSenderId: \"910694464229\",\n  appId: \"1:910694464229:web:35a7e1dcd21c5ae818720c\",\n  measurementId: \"G-8GZS2X66V8\"\n}\n\napp.initializeApp(config)\nanalytics()\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\nserviceWorker.unregister();\n","import React from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\n\nimport * as paths from \"./utils/constants/routerConstants\"\n\nimport { Home } from \"./pages/Home\";\nimport { Projects } from \"./pages/Projects\";\nimport { UnknownRoute } from \"./pages/UnknownRoute\";\n\nexport const App = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path={paths.HOME} component={Home} />\n        <Route path={paths.PROJECTS} component={Projects} />\n        <Route component={UnknownRoute} />\n      </Switch>\n    </Router>\n  )\n}\n"],"sourceRoot":""}